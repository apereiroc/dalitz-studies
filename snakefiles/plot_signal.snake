"""
  Rules for plotting the fit of the signal MC
"""


rule plot_fit_json_to_root:
    input:
        binary = bin_path + "xtokpikpi_CovPlot",
        pars = "output/{meson}/pars.json",
        sig = data_path + "{meson}/signal_set.root",
        norm = norm_path + "{meson}/normalisation_set.root",
    output:
        "output/{meson}/plot.root"
    run:
        shell(f"{input.binary} --meson {wildcards.meson}\
              -i {input.pars} -f {input.sig}\
              -F {input.norm} -o {output}")

rule plot_fit_from_root_to_pdf:
    input:
        pyscript = python_path + "plot_fit_in_5D.py",
        file = "output/{meson}/plot.root"
    output:
        "output/{meson}/plot.pdf"
    run:
        shell(f"python {input.pyscript} \
              --input-file={input.file} \
              --output-fig={output} --bins=30")


rule plot_dynamics_from_json_to_root:
    input:
        binary = bin_path + "xtokpikpi_PlotDynamics",
        pars = "par/standard.json",
        norm = norm_path + "{meson}/normalisation_set.root",
    output:
        "output/{meson}/plot_dynamics.root"
    run:
        shell(f"{input.binary} --meson {wildcards.meson}\
            -i {input.pars}  -F {input.norm} -o {output}")


rule plot_dynamics_from_root_to_pdf:
    input:
        pyscript = python_path + "plot_dynamics_in_5D.py",
        file = "output/{meson}/plot_dynamics.root"
    output:
        "output/{meson}/plot_dynamics.pdf"
    run:
        shell(f"python {input.pyscript} --input-file={input.file}\
               --output-fig={output} --bins=50")
