"""
  Rules for plotting the fit of the signal MC
"""

'''
  Bs0
'''

rule plot_toy_Bs_from_json_to_root:
    input:
        binary=code_path + "src/btokpikpi_CovPlot",
        pars="output/Bs/pars.json",
        sig=data_Bs_path + "signal_set.root",
        norm=phsp_mc_Bs_path + "normalisation_set.root",
    output:
        "output/Bs/plot.root"
    run:
        shell(f"{input.binary} -i {input.pars} -f {input.sig} -F {input.norm} -o {output}")

rule plot_toy_Bs_from_root_to_pdf:
    input:
        pyscript=code_path + "python/plot_fit_in_5D.py",
        file="output/Bs/plot.root"
    output:
        "output/Bs/plot.pdf"
    run:
        shell(f"python {input.pyscript} --input-file={input.file} --output-fig={output} --bins=30")


'''
  D0
'''

rule plot_toy_Du_from_json_to_root:
    input:
        binary=code_path + "src/dtokpikpi_CovPlot",
        pars="output/Du/pars.json",
        sig=data_Du_path + "signal_set.root",
        norm=phsp_mc_Du_path + "normalisation_set.root",
    output:
        "output/Du/plot.root"
    run:
        shell(f"{input.binary} -i {input.pars} -f {input.sig} -F {input.norm} -o {output}")

rule plot_toy_Du_from_root_to_pdf:
    input:
        pyscript=code_path + "python/plot_fit_in_5D.py",
        file="output/Du/plot.root"
    output:
        "output/Du/plot.pdf"
    run:
        shell(f"python {input.pyscript} --input-file={input.file} --output-fig={output} --bins=30")
